<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Weather App</title>
  <link rel="stylesheet" href="style.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
  <div class="weather-app">
    <div class="main-weather">
      <h1 id="city">Loading...</h1>
      <h2 id="temperature">--°C</h2>
      <p id="description">---</p>
      <div class="icon-container">
        <img id="weather-icon" src="" alt="Weather icon">
      </div>
    </div>
  </div>
  <script src="script.js"></script>
</body>
</html>

/* General Reset */
body {
  margin: 0;
  font-family: Arial, sans-serif;
  background: linear-gradient(to bottom, #89cfff, #fff);
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
}

.weather-app {
  text-align: center;
  background: rgba(255, 255, 255, 0.8);
  border-radius: 16px;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
  padding: 20px;
  width: 90%;
  max-width: 400px;
}

.main-weather {
  margin-bottom: 20px;
}

.main-weather h1 {
  font-size: 28px;
  font-weight: bold;
}

.main-weather h2 {
  font-size: 60px;
  margin: 10px 0;
}

.main-weather p {
  font-size: 16px;
  color: #666;
}

.icon-container img {
  width: 80px;
  height: 80px;
}

const apiKey = "90bf53ffb83ae6c976c1c29639cb86a2";
const apiUrl = "https://api.openweathermap.org/data/2.5/weather";
const weatherIconUrl = "https://openweathermap.org/img/wn/";

async function fetchWeather(lat, lon) {
  try {
    const response = await fetch(
      `${apiUrl}?lat=${lat}&lon=${lon}&units=metric&appid=${apiKey}`
    );
    if (!response.ok) {
      throw new Error("Unable to fetch weather data.");
    }
    const data = await response.json();
    updateWeatherUI(data);
  } catch (error) {
    alert(error.message);
  }
}

function updateWeatherUI(data) {
  const city = data.name;
  const temperature = Math.round(data.main.temp);
  const description = data.weather[0].description;
  const weatherIcon = `${weatherIconUrl}${data.weather[0].icon}@2x.png`;

  document.getElementById("city").textContent = city;
  document.getElementById("temperature").textContent = `${temperature}°C`;
  document.getElementById("description").textContent = capitalize(description);
  document.getElementById("weather-icon").src = weatherIcon;
}

function capitalize(str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
}

function getLocation() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(
      (position) => {
        const { latitude, longitude } = position.coords;
        fetchWeather(latitude, longitude);
      },
      (error) => {
        alert("Unable to retrieve your location.");
      }
    );
  } else {
    alert("Geolocation is not supported by this browser.");
  }
}

// Initialize
getLocation();
